{"ast":null,"code":"import { createSlice, configureStore } from '@reduxjs/toolkit';\nconst initialState = {\n  users: []\n};\nconst crud = createSlice({\n  name: 'crud',\n  initialState: initialState,\n  reducers: {\n    add: (state, actions) => {\n      state.users = [...state.users, {\n        id: actions.payload.id,\n        name: actions.payload.name,\n        email: actions.payload.email\n      }];\n      console.log(state.users);\n    },\n    update: (state, action) => {\n      const {\n        id,\n        name,\n        email\n      } = action.payload;\n      const index = state.users.filter(user => user.id == id);\n      if (index != undefined) {\n        state.userData[userId] = {\n          ...state.userData[userId],\n          name: name,\n          email: email\n        };\n      }\n    }\n  }\n});\nexport const crudAction = crud.actions;\nexport const store = configureStore({\n  reducer: {\n    user: crud.reducer\n  }\n});","map":{"version":3,"names":["createSlice","configureStore","initialState","users","crud","name","reducers","add","state","actions","id","payload","email","console","log","update","action","index","filter","user","undefined","userData","userId","crudAction","store","reducer"],"sources":["C:/Users/ArifQasemi/OneDrive - Genashtim Pte. Ltd/Desktop/react-practice/new-app/src/store/store.js"],"sourcesContent":["import {createSlice, configureStore} from '@reduxjs/toolkit';\r\n\r\nconst initialState = {\r\n    users:[]\r\n}\r\n\r\nconst crud = createSlice({\r\n    name: 'crud',\r\n    initialState:initialState,\r\n    reducers:{\r\n        add:(state,actions)=>{\r\n            state.users= [\r\n                ...state.users,{\r\n                    id : actions.payload.id ,\r\n                    name  : actions.payload.name,\r\n                    email : actions.payload.email\r\n                    }\r\n                    ]\r\n            console.log(state.users)\r\n\r\n        },\r\n        update:(state,action)=>{\r\n               const {id, name, email} = action.payload;\r\n                const index = state.users.filter((user) => user.id == id);\r\n                if (index != undefined){\r\n                    state.userData[userId] = {\r\n                        ...state.userData[userId],\r\n                        name: name,\r\n                        email: email,\r\n                      };\r\n\r\n                }            \r\n            }\r\n    }\r\n    \r\n})\r\n\r\nexport const crudAction = crud.actions;\r\nexport const store = configureStore({\r\n    reducer :{user: crud.reducer}\r\n});\r\n"],"mappings":"AAAA,SAAQA,WAAW,EAAEC,cAAc,QAAO,kBAAkB;AAE5D,MAAMC,YAAY,GAAG;EACjBC,KAAK,EAAC;AACV,CAAC;AAED,MAAMC,IAAI,GAAGJ,WAAW,CAAC;EACrBK,IAAI,EAAE,MAAM;EACZH,YAAY,EAACA,YAAY;EACzBI,QAAQ,EAAC;IACLC,GAAG,EAACA,CAACC,KAAK,EAACC,OAAO,KAAG;MACjBD,KAAK,CAACL,KAAK,GAAE,CACT,GAAGK,KAAK,CAACL,KAAK,EAAC;QACXO,EAAE,EAAGD,OAAO,CAACE,OAAO,CAACD,EAAE;QACvBL,IAAI,EAAII,OAAO,CAACE,OAAO,CAACN,IAAI;QAC5BO,KAAK,EAAGH,OAAO,CAACE,OAAO,CAACC;MACxB,CAAC,CACA;MACTC,OAAO,CAACC,GAAG,CAACN,KAAK,CAACL,KAAK,CAAC;IAE5B,CAAC;IACDY,MAAM,EAACA,CAACP,KAAK,EAACQ,MAAM,KAAG;MAChB,MAAM;QAACN,EAAE;QAAEL,IAAI;QAAEO;MAAK,CAAC,GAAGI,MAAM,CAACL,OAAO;MACvC,MAAMM,KAAK,GAAGT,KAAK,CAACL,KAAK,CAACe,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACT,EAAE,IAAIA,EAAE,CAAC;MACzD,IAAIO,KAAK,IAAIG,SAAS,EAAC;QACnBZ,KAAK,CAACa,QAAQ,CAACC,MAAM,CAAC,GAAG;UACrB,GAAGd,KAAK,CAACa,QAAQ,CAACC,MAAM,CAAC;UACzBjB,IAAI,EAAEA,IAAI;UACVO,KAAK,EAAEA;QACT,CAAC;MAEP;IACJ;EACR;AAEJ,CAAC,CAAC;AAEF,OAAO,MAAMW,UAAU,GAAGnB,IAAI,CAACK,OAAO;AACtC,OAAO,MAAMe,KAAK,GAAGvB,cAAc,CAAC;EAChCwB,OAAO,EAAE;IAACN,IAAI,EAAEf,IAAI,CAACqB;EAAO;AAChC,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}